name: Nuttx Targets

on:
  push:
    branches:
    - 'master'
  pull_request:
    branches:
    - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    container: px4io/px4-dev-nuttx-focal:2020-11-18
    strategy:
      matrix:
        config: [
          airmind_mindpx-v2_default,
          av_x-v1_default,
          bitcraze_crazyflie_default,
          cuav_can-gps-v1_canbootloader,
          cuav_can-gps-v1_default,
          cuav_nora_default,
          cuav_x7pro_default,
          cubepilot_cubeorange_console,
          cubepilot_cubeorange_default,
          cubepilot_cubeyellow_console,
          cubepilot_cubeyellow_default,
          holybro_durandal-v1_default,
          holybro_kakutef7_default,
          holybro_pix32v5_default,
          intel_aerofc-v1_default,
          modalai_fc-v1_default,
          mro_ctrl-zero-f7_default,
          mro_pixracerpro_default,
          mro_x21-777_default,
          mro_x21_default,
          nxp_fmuk66-v3_default,
          nxp_fmuk66-e_default,
          nxp_fmuk66-v3_socketcan,
          nxp_fmuk66-v3_rtps,
          nxp_fmurt1062-v1_default,
          nxp_ucans32k146_default,
          omnibus_f4sd_default,
          px4_fmu-v2_default,
          px4_fmu-v2_fixedwing,
          px4_fmu-v2_lpe,
          px4_fmu-v2_multicopter,
          px4_fmu-v2_rover,
          px4_fmu-v2_test,
          px4_fmu-v3_default,
          px4_fmu-v4_cannode,
          px4_fmu-v4_default,
          px4_fmu-v4_optimized,
          px4_fmu-v4pro_default,
          px4_fmu-v5_default,
          px4_fmu-v5_fixedwing,
          px4_fmu-v5_multicopter,
          px4_fmu-v5_optimized,
          px4_fmu-v5_rover,
          px4_fmu-v5_rtps,
          px4_fmu-v5_stackcheck,
          px4_fmu-v5x_base_phy_DP83848C,
          px4_fmu-v5x_default,
          px4_fmu-v6x_default,
          px4_io-v2_default,
          spracing_h7extreme_default,
          uvify_core_default
          ]
    steps:
    - uses: actions/checkout@v1
      with:
        token: ${{secrets.ACCESS_TOKEN}}

    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      shell: cmake -P {0}
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        message("::set-output name=timestamp::${current_date}")
    - name: ccache cache files
      uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ${{matrix.config}}-ccache-${{steps.ccache_cache_timestamp.outputs.timestamp}}
        restore-keys: ${{matrix.config}}-ccache-
    - name: setup ccache
      run: |
          mkdir -p ~/.ccache
          echo "base_dir = ${GITHUB_WORKSPACE}" > ~/.ccache/ccache.conf
          echo "compression = true" >> ~/.ccache/ccache.conf
          echo "compression_level = 6" >> ~/.ccache/ccache.conf
          echo "max_size = 400M" >> ~/.ccache/ccache.conf
          ccache -s
          ccache -z

    - name: make ${{matrix.config}}
      run: make ${{matrix.config}}
    - name: make ${{matrix.config}} bloaty_compileunits
      run: make ${{matrix.config}} bloaty_compileunits || true
    - name: make ${{matrix.config}} bloaty_inlines
      run: make ${{matrix.config}} bloaty_inlines || true
    - name: make ${{matrix.config}} bloaty_segments
      run: make ${{matrix.config}} bloaty_segments || true
    - name: make ${{matrix.config}} bloaty_symbols
      run: make ${{matrix.config}} bloaty_symbols || true
    - name: make ${{matrix.config}} bloaty_templates
      run: make ${{matrix.config}} bloaty_templates || true
    - name: make ${{matrix.config}} bloaty_compare_master
      run: make ${{matrix.config}} bloaty_compare_master || true
    - name: ccache post-run
      run: ccache -s

    - name: Upload px4 package
      uses: actions/upload-artifact@v1
      with:
        name: px4_package_${{matrix.config}}
        path: build/${{matrix.config}}/${{matrix.config}}.px4
